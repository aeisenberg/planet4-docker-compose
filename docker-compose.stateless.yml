version: '3'
services:
  traefik:
    image: traefik:1.4-alpine
    command: --web --docker --docker.domain=planet4.test --docker.watch --logLevel=DEBUG
    networks:
      - proxy
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./traefik.toml:/traefik.toml

  db:
    image: mysql:5.6
    env_file:
      - ./db.env
    volumes:
      - ./persistence/mysql:/var/lib/mysql:cached
    networks:
      - db

  app:
    image: gcr.io/planet-4-151612/p4-gpi-app-dev:${APP_BUILD_TAG:-latest}
    networks:
      - local
      - db
    dns:
      - ${DNS_RESOLVER:-8.8.8.8}
    volumes:
      - data:/app/source/public:cached
    environment:
      - OVERWRITE_FILES=${OVERWRITE_FILES:-false}
    env_file:
      - ./app.env
      - ./db.env
    depends_on:
      - db
      - redis
    # To force reinstalling Wordpress from composer on container start
    # environment:
    #   - OVERWRITE_FILES=true

  redis:
    image: redis:4-alpine
    networks:
      - local
    volumes:
      - ./persistence/redis:/data

  openresty:
    image: gcr.io/planet-4-151612/openresty:${OPENRESTY_BUILD_TAG:-latest}
    networks:
      - local
      - proxy
    volumes:
      - data:/app/www:cached
    env_file:
      - ./app.env
    environment:
      - OPENRESTY_FASTCGI_BACKEND=${OPENRESTY_FASTCGI_BACKEND:-app:9000}
      - PHP_ENABLED=true
      - SSL_ENABLED=false
    labels:
      traefik.backend: "test"
      traefik.frontend.rule: "Host:www.planet4.test"
      traefik.docker.network: "planet4dockercompose_proxy"
      traefik.enable: "true"
    depends_on:
      - app
      - traefik
      - redis


  phpmyadmin:
    image: phpmyadmin/phpmyadmin:4.7
    depends_on:
      - db
      - traefik
    env_file:
      - ./db.env
    volumes:
      - ./persistence/pma:/sessions
    networks:
      - db
      - proxy
    labels:
      traefik.backend: "pma"
      traefik.frontend.rule: "Host:pma.planet4.test"
      traefik.docker.network: "planet4dockercompose_proxy"
      traefik.enable: "true"

volumes:
  data:

networks:
  local:
  db:
  proxy:
    driver: bridge
